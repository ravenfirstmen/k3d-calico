# k3d configuration file: https://k3d.io/v5.6.3/usage/configfile/

apiVersion: k3d.io/v1alpha5 
kind: Simple 
metadata:
  name: k3s-default 
servers: 3 
agents: 0

kubeAPI: 
  hostPort: "6443"

image: rancher/k3s:v1.29.3-k3s1 

volumes: 
  - volume: ${PWD}/charts:/var/lib/rancher/k3s/server/manifests/charts
    nodeFilters:
      - server:*
  - volume: ${PWD}/machine-id:/etc/machine-id
    nodeFilters:
      - server:*
      - agent:*

ports:
  - port: 80:80
    nodeFilters:
      - loadbalancer
  - port: 443:443 
    nodeFilters:
      - loadbalancer
  - port: 4222:4222 
    nodeFilters:
      - loadbalancer
  - port: 3000:3000 
    nodeFilters:
      - loadbalancer
  - port: 3100:3100 
    nodeFilters:
      - loadbalancer
  - port: 4566:4566 
    nodeFilters:
      - loadbalancer
  - port: 8080:8080 
    nodeFilters:
      - loadbalancer
  - port: 9000:9000 
    nodeFilters:
      - loadbalancer
  - port: 6000:6000 
    nodeFilters:
      - loadbalancer
  - port: 9090:9090 
    nodeFilters:
      - loadbalancer

options:
  k3s: # options passed on to K3s itself
    extraArgs: # same as `--k3s-arg`
      - arg: "--cluster-cidr=10.42.0.0/16"
        nodeFilters:
          - server:*
          - agent:*
      - arg: "--disable=metrics-server"
        nodeFilters:
          - server:*
      - arg: "--flannel-backend=none"
        nodeFilters:
          - server:*
          - agent:*
      - arg: "--disable-network-policy"   
        nodeFilters: 
          - server:*
          - agent:*
      - arg: "--kube-proxy-arg=conntrack-max-per-core=0"
        nodeFilters:
          - server:*
          - agent:*
      # - arg: "--disable=traefik"   
      #   nodeFilters: 
      #     - server:*

    nodeLabels: # same as `--k3s-node-label'
      - label: label/nodegroup=infra 
        nodeFilters:
          - server:*
      - label: label/nodegroup=jobs 
        nodeFilters:
          - agent:*

  # ===================================

  k3d: # k3d runtime settings
    wait: true
    timeout: "60s"
    disableLoadbalancer: false # same as `--no-lb`
    disableImageVolume: false # same as `--no-image-volume`
    disableRollback: false # same as `--no-Rollback`
    loadbalancer:
      configOverrides:
        - settings.workerConnections=2048

  kubeconfig:
    updateDefaultKubeconfig: true
    switchCurrentContext: true

registries: 
  create: 
    name: k3d-registry.localhost
    host: "0.0.0.0"
    hostPort: "5000"
  #   volumes:
  #     - /tmp:/var/lib/registry # persist registry data locally
  # use:
  #   - k3d-registry.localhost:5000
  # config: | 
  #   mirrors:
  #     "k3d-registry.localhost:5000":
  #       endpoint:
  #         - http://k3d-registry.localhost:5000 
  #     "docker.io":
  #       endpoint:
  #         - http://k3d-registry.localhost:5000 
  #     "quay.io":
  #       endpoint:
  #         - http://k3d-registry.localhost:5000 

# NOTE: if using a local registry with docker you need to connect both networks
# RUN: docker network connect k3d-k3s-default k3d-registry.localhost

# heads up. In case of error: "failed to create CRI service: failed to create cni conf monitor for default: failed to create fsnotify watcher: too many open files"
# raise the limits ion your kernel
# ex:
# fs.inotify.max_user_watches = 524288
# fs.inotify.max_user_instances = 512
# add to /etc/sysctl.d/20-inotify.conf